
function addExportButton() {
  const buttonsRow = document.querySelector('.content-wrapper .vulnerability-header .label-row');
  const latestButtonOfTheRow = buttonsRow.querySelector('button:nth-of-type(2)');
  latestButtonOfTheRow.style.marginLeft = 'auto';

  const newButton = document.createElement('button');
  const buttonSpanContent = document.createElement('span');
  const buttonContent = document.createElement('span');
  buttonContent.textContent = 'Export PDF';
  buttonContent.setAttribute('class', 'button-label');
  newButton.setAttribute('class', 'btn btn-undefined conviso-button button-align');
  newButton.setAttribute('style', '--624f945d: var(--conviso-shade-color-10); --3388efdc: var(--conviso-primary-text-color); --62962e36: var(--conviso-shade-color-9);');
  newButton.onclick = async () => await buttonFunction();
  buttonSpanContent.appendChild(buttonContent);
  newButton.appendChild(buttonSpanContent);

  buttonsRow.appendChild(newButton);
}

async function buttonFunction() {
  const vulnDescription = document.querySelector('.content-wrapper .row .left-side .vulnerability-content-box:nth-of-type(1) .topic-container .collapsed-text p').innerText;
  const vulnURL = window.location.href;
  const vulnSolutionList = document.querySelectorAll('.content-wrapper .row .left-side .vulnerability-content-box:nth-of-type(3) .topic-container .collapsed-text ul li');
  const vulnReferenceList = document.querySelectorAll('.content-wrapper .row .left-side .vulnerability-content-box:nth-of-type(4) .topic-container .external-link a');
  const vulnerabilityTitle = document.querySelector('h1.vulnerability-title').innerText;
  const code = document.querySelectorAll('.code-editor .cm-editor .cm-content .cm-line');
  let codeSnippet = '';

  if (code) {
    code.forEach((line) => {

      if (line.querySelector('span.code-highlighted-line')) {
        codeSnippet += '<mark>' + line.textContent + '</mark>\n';
      } else {
        codeSnippet += line.textContent + '\n';
      }
    })
  }

  let vulnID;
  let vulnSeverity;
  let vulnFile;
  let vulnFileLine;
  let packageAffected;
  let packageVersion;
  let vulnUrlInDast;

  const infoTable = document.querySelectorAll('.content-wrapper .row .failure-type .failure-type-row');

  if (infoTable && infoTable.length > 0) {
    infoTable.forEach((info) => {
      const descriptionKey = info.querySelector('.description-key').innerText;

      switch (descriptionKey) {
        case "Vuln ID:":
          vulnID = info.querySelector('.vuln-id-badge').innerText;
          break;

        case "Severity:":
          vulnSeverity = info.querySelector('.badge').innerText;
          break;

        case "File:":
          vulnFile = info.querySelector('.tooltip-container span').innerText;
          break;

        case "Vulnerable line:":
          vulnFileLine = info.querySelector('.description-value').innerText;
          break;

        case "Package:":
          packageAffected = info.querySelector('.description-value').innerText;
          break;

        case "Affected version:":
          packageVersion = info.querySelector('.description-value').innerText;
          break;

        case "URL:":
          vulnUrlInDast = info.querySelector('.info_url').innerText;
          break;
      }

    });
  }

  let vulnSolutions = [];
  if (vulnSolutionList && vulnSolutionList.length > 0) {
    vulnSolutionList.forEach((solution) => vulnSolutions.push(solution.innerText));
  } else {
    const singleSolution = document.querySelector('.content-wrapper .row .left-side .vulnerability-content-box:nth-of-type(3) .topic-container .collapsed-text p');
    if (singleSolution) vulnSolutions.push(singleSolution.innerText);
  }

  let vulnReferences = [];
  if (vulnReferenceList && vulnReferenceList.length > 0) {
    vulnReferenceList.forEach((reference) => vulnReferences.push(reference.href));
  } else {
    const singleReference = document.querySelector('.content-wrapper .row .left-side .vulnerability-content-box:nth-of-type(4) .topic-container span');
    if (singleReference && !singleReference.innerText.includes('No content to show')) vulnReferences.push(singleReference.innerText);
  }

  let references = '';
  let solutions = '';

  vulnReferences.forEach(reference => references += ('<li><a href="' + reference + '">' + reference + '</a></li>'));
  vulnSolutions.forEach(solution => solutions += ('<li>' + solution + '</li>'));

  let html = `<!DOCTYPE html><html lang="en"><head><meta charset="UTF-8"><meta name="viewport" content="width=device-width,initial-scale=1"><title>${vulnerabilityTitle} | Vulnerability Report</title><style>body {font-family: Arial, sans-serif;margin: 20px;line-height: 1.6}.container {max-width: 800px;margin: 0 auto;padding: 20px;border: 1px solid #ddd;border-radius: 8px}h1,h2,h3 {color: #333}.section {margin-bottom: 20px}.section h2 {border-bottom: 2px solid #ddd;padding-bottom: 5px}ul {padding-left: 20px}.label {font-weight: 700}pre {background-color: #f5f5f5;padding: 10px;border-radius: 4px;overflow-x: auto;}code {font-family: 'Courier New', Courier, monospace;color: #d63384;}</style></head><body><div class="container"><h1><a href="${vulnURL}">${vulnerabilityTitle}</a></h1><div class="section"><h2>Vulnerability Details</h2><p><span class="label">ID: </span><span><a href="${vulnURL}">${vulnID}</a></span></p><p><span class="label">Name: </span><span>${vulnerabilityTitle}</span></p><p><span class="label">Type: </span><span>${packageAffected ? 'SCA' : (vulnFile ? 'SAST' : 'Other...')}</span></p><p><span class="label">Severity: </span><span>${vulnSeverity}</span></p>${vulnFile ? '<p><span class="label">File: </span><span>' + vulnFile + '</span></p>' : ''}${vulnFileLine ? '<p><span class="label">Line of File: </span><span>' + vulnFileLine + '</span></p>' : ''}${vulnUrlInDast ? '<p><span class="label">URL: </span><span>' + vulnUrlInDast + '</span></p>' : ''}${packageAffected ? '<p><span class="label">Package: </span><span>' + packageAffected + '</span></p>' : ''}${packageVersion ? '<p><span class="label">Package Version: </span><span>' + packageVersion + '</span></p>' : ''}</div><div class="section"><h2>Description</h2><p>${vulnDescription}</p></div>${vulnReferences.length > 0 ? '<div class="section"><h2>References</h2><ul>' + references + '</ul></div>' : ''}${vulnSolutions.length > 0 ? '<div class="section"><h2>Fix Recommendations</h2><ul>' + solutions + '</ul></div>' : ''}${codeSnippet ? '<div class="section"><h2>Code Snippet</h2><pre><code>' + codeSnippet + '</code></pre></div>' : ''}</div></body></html>`;

  printContent(html);
}

function printContent(content) {
  let mywindow = window.open('', '_blank');
  mywindow.document.write(content);
  mywindow.document.close(); // necessary for IE >= 10
  mywindow.focus(); // necessary for IE >= 10*/
  // mywindow.print();
  // mywindow.close();

  return true;
}

function runWhenPageReady() {
  if (document.querySelector('.content-wrapper .row .failure-type .failure-type-row')) {
    addExportButton();
  } else {
    setTimeout(runWhenPageReady, 500);
  }
}

(() => {
  runWhenPageReady();
})()
